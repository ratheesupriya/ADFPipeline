{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "Stage1_Sales_SAL_SWINVC_TB",
						"type": "DatasetReference"
					},
					"name": "Stage1SalesSALSWINVCTB"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_AfterSales_CMM_CMCD_TB",
						"type": "DatasetReference"
					},
					"name": "Stage1SalesAfterSalesCMMCMCDTB"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_SAL_SOBKNG_TB",
						"type": "DatasetReference"
					},
					"name": "Stage1SalesSALSOBKNGTB"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_AfterSales_CMM_CMCD_TB",
						"type": "DatasetReference"
					},
					"name": "Stage1SalesAfterSalesCMMCMCDTB2TB"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_Team_Leader",
						"type": "DatasetReference"
					},
					"name": "SalesTeamLeader"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_AfterSales_CRM_SCEQRY_TB",
						"type": "DatasetReference"
					},
					"name": "Stage1SalesAfterSalesCRMSCEQRY"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_CRM_SDENSC_TB",
						"type": "DatasetReference"
					},
					"name": "CRMSDENSC"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_CRM_SDENSC_TB",
						"type": "DatasetReference"
					},
					"name": "CRMSDENSC1"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_AfterSales_CMM_CMCD_TB",
						"type": "DatasetReference"
					},
					"name": "AfterSalesCMMCMCDTB"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_AfterSales_CMM_CMCD_TB",
						"type": "DatasetReference"
					},
					"name": "StageSalesAfterSalesCMMCMCDTB2"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_AfterSales_CMM_CMCD_TB",
						"type": "DatasetReference"
					},
					"name": "Stage1SalesAfterSalesCMMCMCDTB3"
				},
				{
					"dataset": {
						"referenceName": "Stage1_Sales_CRM_SCEQCR_TB",
						"type": "DatasetReference"
					},
					"name": "source1"
				}
			],
			"sinks": [],
			"transformations": [
				{
					"name": "select1"
				},
				{
					"name": "Transformation1"
				},
				{
					"name": "filter1"
				},
				{
					"name": "lookup1"
				},
				{
					"name": "Renaming"
				},
				{
					"name": "select2"
				},
				{
					"name": "select3"
				},
				{
					"name": "filter2"
				},
				{
					"name": "Transformation2"
				},
				{
					"name": "lookup2"
				},
				{
					"name": "select4"
				},
				{
					"name": "Renaming2"
				},
				{
					"name": "join1"
				},
				{
					"name": "Transformation3"
				},
				{
					"name": "Renaming3"
				},
				{
					"name": "join2"
				},
				{
					"name": "Transformation4"
				},
				{
					"name": "lookup3"
				},
				{
					"name": "select5"
				},
				{
					"name": "filter3"
				},
				{
					"name": "Transformation5"
				},
				{
					"name": "lookup4"
				},
				{
					"name": "select7"
				},
				{
					"name": "filter4"
				},
				{
					"name": "Transformation6"
				},
				{
					"name": "select9"
				},
				{
					"name": "filter5"
				},
				{
					"name": "lookup5"
				},
				{
					"name": "lookup6"
				},
				{
					"name": "select11"
				},
				{
					"name": "filter6"
				},
				{
					"name": "select13"
				},
				{
					"name": "filter7"
				},
				{
					"name": "lookup7"
				},
				{
					"name": "select14"
				},
				{
					"name": "select15"
				},
				{
					"name": "select16"
				}
			],
			"scriptLines": [
				"source(output(",
				"          INVC_DLR_NO as string,",
				"          INVC_NO as string,",
				"          INVC_CORP_NO as string,",
				"          INVC_CMPN_NO as string,",
				"          INVC_TYPE as string,",
				"          INVC_CNFM_YN as string,",
				"          INVC_CNFM_DATE as string,",
				"          INVC_DATE as string,",
				"          INVC_INSR_YN as string,",
				"          INVC_INSR_AMT as string,",
				"          INVC_INSR_DATE as string,",
				"          INVC_INSR_TYPE as string,",
				"          INVC_INSR_NO as string,",
				"          INVC_RGSTN_NO as string,",
				"          INVC_RGSTN_DATE as string,",
				"          INVC_DLVRY_DATE as string,",
				"          INVC_ADDR1 as string,",
				"          INVC_ADDR2 as string,",
				"          INVC_ADDR3 as string,",
				"          INVC_RGN_CODE as string,",
				"          INVC_STCD_CODE as string,",
				"          INVC_CITY_CODE as string,",
				"          INVC_LCTN_CODE as string,",
				"          INVC_PIN_CODE as string,",
				"          INVC_CNCL_YN as string,",
				"          INVC_CNCL_DATE as string,",
				"          INVC_CNCL_RMRKS as string,",
				"          INVC_BKNG_NO as string,",
				"          INVC_CRTE_DTIME as string,",
				"          INVC_CRTE_EMP_NO as string,",
				"          INVC_UPDT_DTIME as string,",
				"          INVC_UPDT_EMP_NO as string,",
				"          INVC_ACTRL_USR_YN as string,",
				"          INVC_DN_DATE as string,",
				"          INVC_DLVRY_CNFM_YN as string,",
				"          INVC_CC_REQ as string,",
				"          INVC_CC_REASON as string,",
				"          INVC_CC_RDATE as string,",
				"          INVC_CC_RMRKS as string,",
				"          INVC_CC_RA_YN as string,",
				"          INVC_CC_STATUS as string,",
				"          INVC_CC_REQ_VERSION as string,",
				"          INVC_HMIL_EMP_CODE as string,",
				"          INVC_ENQRY_NO as string,",
				"          INVC_REGI_FILE_DOC_NO as string,",
				"          INVC_DLVRY_FILE_DOC_NO as string,",
				"          INVC_REGI_CUST_NO as string,",
				"          INVC_REGI_RELAT_SHIP as string,",
				"          INVC_VIN_NO as string,",
				"          INVC_BASIC_PRCE as string,",
				"          INVC_VRNT_PRCE as string,",
				"          INVC_ADVNC_EMI as string,",
				"          INVC_LOAN_AMT as string,",
				"          INVC_WTYNLTY_CFC_YN as string,",
				"          INVC_EQCR_SEQ as string,",
				"          INVC_ALCN_DATE as string,",
				"          INVC_SCHEME_YN as string,",
				"          INVC_MYKIA as string,",
				"          INVC_MYKIA_REG_DATE as string,",
				"          INVC_MK_VINLINK_DT as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Stage1SalesSALSWINVCTB",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Stage1SalesAfterSalesCMMCMCDTB",
				"source(output(",
				"          BKNG_DLR_NO as string,",
				"          BKNG_NO as string,",
				"          BKNG_CORP_NO as string,",
				"          BKNG_CMPN_NO as string,",
				"          BKNG_DATE as string,",
				"          BKNG_MODEL_CODE as string,",
				"          BKNG_VRNT_CODE as string,",
				"          BKNG_COLOR_CODE as string,",
				"          BKNG_EXPCT_DLVRY_DATE as string,",
				"          BKNG_VRNT_PRICE as string,",
				"          BKNG_AMT as string,",
				"          BKNG_RCPT_TOTAL_AMT as string,",
				"          BKNG_RCPT_CMPLT_YN as string,",
				"          BKNG_ALCN_DATE as string,",
				"          BKNG_ALCN_VIN as string,",
				"          BKNG_FNCE_TYPE as string,",
				"          BKNG_FNCE_YN as string,",
				"          BKNG_FNCER_CODE as string,",
				"          BKNG_DSA_NAME as string,",
				"          BKNG_LOAN_AMT as string,",
				"          BKNG_TENOR_NMTHS as string,",
				"          BKNG_FILE_NO as string,",
				"          BKNG_DO_NO as string,",
				"          BKNG_DO_AMT as string,",
				"          BKNG_DO_DATE as string,",
				"          BKNG_IFA_AMT as string,",
				"          BKNG_INVGT_DATE as string,",
				"          BKNG_FLGN_DATE as string,",
				"          BKNG_PADS_DATE as string,",
				"          BKNG_FNLA_DATE as string,",
				"          BKNG_INVGT_STAT as string,",
				"          BKNG_CNCL_TYPE as string,",
				"          BKNG_CNCL_DATE as string,",
				"          BKNG_CNCL_RMRKS as string,",
				"          BKNG_ENQRY_NO as string,",
				"          BKNG_EMP_NO as string,",
				"          BKNG_CUST_NO as string,",
				"          BKNG_CRTE_DTIME as string,",
				"          BKNG_CRTE_EMP_NO as string,",
				"          BKNG_UPDT_DTIME as string,",
				"          BKNG_UPDT_EMP_NO as string,",
				"          BKNG_RADS_DATE as string,",
				"          BKNG_DO_ISSD_BY as string,",
				"          BKNG_DO_CMMT_PMNT_DATE as string,",
				"          BKNG_DO_ISSR_NAME as string,",
				"          BKNG_DBRS_DATE as string,",
				"          BKNG_EXPTD_DBRS_DATE as string,",
				"          BKNG_CMTD_DLVRY_DATE as string,",
				"          BKNG_RACK_RATE as string,",
				"          BKNG_DSA_CMSN as string,",
				"          BKNG_BRKR_PYMT_TYPE as string,",
				"          BKNG_BRKR_PYMT_AMT as string,",
				"          BKNG_SALE_TYPE as string,",
				"          BKNG_ADVNC_EMI as string,",
				"          BKNG_IFA_DATE as string,",
				"          BKNG_BASIC_PRICE as string,",
				"          BKNG_TAX_PRCNT as string,",
				"          BKNG_EDCE_PRCNT as string,",
				"          BKNG_HYPO_NAME as string,",
				"          BKNG_RFND_TOTAL_AMT as string,",
				"          BKNG_CGST_PRCNT as string,",
				"          BKNG_SGST_PRCNT as string,",
				"          BKNG_IGST_PRCNT as string,",
				"          BKNG_INTCOLOR_CODE as string,",
				"          BKNG_BILL_TO_NAME as string,",
				"          BKNG_BILL_TO_ADDR as string,",
				"          BKNG_BILL_TO_STATE as string,",
				"          BKNG_BILL_TO_CITY as string,",
				"          BKNG_BILL_TO_TEHSIL as string,",
				"          BKNG_BILL_TO_VILLAGE as string,",
				"          BKNG_BILL_TO_PIN as string,",
				"          BKNG_SHIP_TO_NAME as string,",
				"          BKNG_SHIP_TO_ADDR as string,",
				"          BKNG_SHIP_TO_STATE as string,",
				"          BKNG_SHIP_TO_CITY as string,",
				"          BKNG_SHIP_TO_TEHSIL as string,",
				"          BKNG_SHIP_TO_VILLAGE as string,",
				"          BKNG_SHIP_TO_PIN as string,",
				"          BKNG_FINCR_BRANCH_NM as string,",
				"          BKNG_RMRKS as string,",
				"          BKNG_SRC_FLG as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Stage1SalesSALSOBKNGTB",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Stage1SalesAfterSalesCMMCMCDTB2TB",
				"source(output(",
				"          TEAM_LEADER as string,",
				"          TEAM_LEADER_JOINING_DATE as string,",
				"          TEAM_LEADER_LEAVE_DATE as string,",
				"          KEC as string,",
				"          KEC_NAME as string,",
				"          KEC_CODE as string,",
				"          KEC_JOIN_DATE as string,",
				"          KEC_LEAVE_DATE as string,",
				"          EQRY_ENQRY_NO as string,",
				"          EQRY_DLR_NO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> SalesTeamLeader",
				"source(output(",
				"          EQRY_DLR_NO as string,",
				"          EQRY_ENQRY_NO as string,",
				"          EQRY_CORP_NO as string,",
				"          EQRY_CMPN_NO as string,",
				"          EQRY_DATE as string,",
				"          EQRY_SRC_CODE as string,",
				"          EQRY_STAT as string,",
				"          EQRY_TYPE as string,",
				"          EQRY_TEST_DRVR_DATE as string,",
				"          EQRY_FNCE_YN as string,",
				"          EQRY_FNCER_CODE as string,",
				"          EQRY_LOAN_AMT as string,",
				"          EQRY_TENOR_MNTHS as string,",
				"          EQRY_EXCHG_YN as string,",
				"          EQRY_EXCHG_MODEL_CODE as string,",
				"          EQRY_EXCHG_SRC_CODE as string,",
				"          EQRY_EXPCT_PRICE as string,",
				"          EQRY_QUOTD_PRICE as string,",
				"          EQRY_CLSE_DATE as string,",
				"          EQRY_CLSE_TYPE as string,",
				"          EQRY_CLSE_RMRKS as string,",
				"          EQRY_EMP_NO as string,",
				"          EQRY_CUST_NO as string,",
				"          EQRY_LISTD_CORP as string,",
				"          EQRY_CORP_NAME as string,",
				"          EQRY_RFRL_BY as string,",
				"          EQRY_CRTE_DTIME as string,",
				"          EQRY_CRTE_EMP_NO as string,",
				"          EQRY_UPDT_DTIME as string,",
				"          EQRY_UPDT_EMP_NO as string,",
				"          EQRY_EQFU_SEQ as string,",
				"          EQRY_UPDT_DATE as string,",
				"          EQRY_TEST_DRIVE_YN as string,",
				"          EQRY_SR_NUM as string,",
				"          EQRY_SR_TYPE as string,",
				"          EQRY_FLW_STATUS as string,",
				"          EQRY_ASSOCIATE_ID as string,",
				"          EQRY_RSO_ID as string,",
				"          EQRY_FUEL_TYPE as string,",
				"          EQRY_PRESENT_CAR_YN as string,",
				"          EQRY_MAKER_CODE as string,",
				"          EQRY_TD_VIN as string,",
				"          EQRY_CUST_BLOCK as string,",
				"          EQRY_BULK_SALE as string,",
				"          EQRY_P_MODL_YEAR as string,",
				"          EQRY_CLS_VAL as string,",
				"          EQRY_INCOM_GROUP as string,",
				"          EQRY_REFL_ID as string,",
				"          EQRY_REFL_PUNCH_DLR_NO as string,",
				"          EQRY_PLAN_DATE as string,",
				"          EQRY_ATIVT_NAME_CODE as string,",
				"          EQRY_ATIVT_LOC_CODE as string,",
				"          EQRY_NEWCAR_YN as string,",
				"          EQRY_FCALL_EMP_NO as string,",
				"          EQRY_APNT_DTIME as string,",
				"          VIST_DTIME as string,",
				"          LEAV_DTIME as string,",
				"          EQRY_CTGR_CODE as string,",
				"          EQRY_SUB_SRC_CODE as string,",
				"          EQRY_CLSE_GRP_TYPE as string,",
				"          EQRY_BUDG_TYPE as string,",
				"          EQRY_CERT_TYPE as string,",
				"          EQRY_UC_SC_EMP_NO as string,",
				"          EQRY_TDRIVE_RMRKS as string,",
				"          EQRY_VC_RMRKS as string,",
				"          EQRY_REQ_TYPE as string,",
				"          EQRY_EMAILSEND_YN as string,",
				"          EQRY_SRC_FLG as string,",
				"          EQRY_SR_NUM_REAL as string,",
				"          EQRY_ENG_TYP as string,",
				"          EQRY_TRNSM_TYP as string,",
				"          SOQ_TAG_YN as string,",
				"          EQRY_EVAL_YN as string,",
				"          EQRY_EXCH_DN as string,",
				"          EQRY_FINAL_BP as string,",
				"          EQRY_CAMPGN_NO as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Stage1SalesAfterSalesCRMSCEQRY",
				"source(output(",
				"          ENSC_CMPN_NO as string,",
				"          ENSC_CORP_NO as string,",
				"          ENSC_GRP_CODE as string,",
				"          ENSC_CODE as string,",
				"          ENSC_GRP_NAME as string,",
				"          ENSC_NAME as string,",
				"          ENSC_PRIORITY as string,",
				"          ENSC_DELYN as string,",
				"          ENSC_CRTE_EMP_NO as string,",
				"          ENSC_CRTE_DTIME as string,",
				"          ENSC_UPDT_EMP_NO as string,",
				"          ENSC_UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CRMSDENSC",
				"source(output(",
				"          ENSC_CMPN_NO as string,",
				"          ENSC_CORP_NO as string,",
				"          ENSC_GRP_CODE as string,",
				"          ENSC_CODE as string,",
				"          ENSC_GRP_NAME as string,",
				"          ENSC_NAME as string,",
				"          ENSC_PRIORITY as string,",
				"          ENSC_DELYN as string,",
				"          ENSC_CRTE_EMP_NO as string,",
				"          ENSC_CRTE_DTIME as string,",
				"          ENSC_UPDT_EMP_NO as string,",
				"          ENSC_UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> CRMSDENSC1",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> AfterSalesCMMCMCDTB",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> StageSalesAfterSalesCMMCMCDTB2",
				"source(output(",
				"          CMPN_NO as string,",
				"          CORP_NO as string,",
				"          CMM_GRP_CODE as string,",
				"          CMM_CODE as string,",
				"          CMM_CODE_NAME as string,",
				"          REMARK_1 as string,",
				"          REMARK_2 as string,",
				"          REMARK_3 as string,",
				"          REMARK_4 as string,",
				"          REMARK_5 as string,",
				"          USED_YN as string,",
				"          PRIORITY as string,",
				"          CRTE_EMP_NO as string,",
				"          CRTE_DTIME as string,",
				"          UPDT_EMP_NO as string,",
				"          UPDT_DTIME as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> Stage1SalesAfterSalesCMMCMCDTB3",
				"source(output(",
				"          EQCR_DLR_NO as string,",
				"          EQCR_ENQRY_NO as string,",
				"          EQCR_SEQ as string,",
				"          EQCR_CORP_NO as string,",
				"          EQCR_CMPN_NO as string,",
				"          EQCR_MODEL_CODE as string,",
				"          EQCR_VRNT_CODE as string,",
				"          EQCR_COLOR_CODE as string,",
				"          EQCR_QTY as string,",
				"          EQCR_CRTE_DTIME as string,",
				"          EQCR_CRTE_EMP_NO as string,",
				"          EQCR_UPDT_DTIME as string,",
				"          EQCR_UPDT_EMP_NO as string,",
				"          EQCR_INTCOLOR_CODE as string,",
				"          EQCR_MAKER_CODE as string,",
				"          EQCR_INT_COLOR_CODE as string,",
				"          EQCR_QUOTED_PRICE as string,",
				"          EQCR_EXPECTED_PRICE as string,",
				"          EQCR_FUEL_TYPE as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false) ~> source1",
				"Stage1SalesAfterSalesCMMCMCDTB select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          INVC_TYPE = CMM_CODE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"Stage1SalesSALSWINVCTB derive({\"Delivered/Not Delivered Flag\"} = iif(length(trim(INVC_DLVRY_DATE))<1,\"Not Delivered\",\"Delivered\"),",
				"          Flag = 'Invoice',",
				"          Delivery_Date = toString(toTimestamp(toString(byName('INVC_DLVRY_DATE')), 'dd-MM-yyyy') , 'dd/MM/yyyy'),",
				"          INVC_CNFM_DATE = iif(INVC_CNFM_DATE=='23-10-2010',replace(INVC_CNFM_DATE,'23-10-2010','23-10-2020'),INVC_CNFM_DATE ),",
				"          Flag1 = 'Online',",
				"          INVC_BASIC_PRCE = substring(INVC_BASIC_PRCE, 4, 5)) ~> Transformation1",
				"select1 filter(CMM_GRP_CODE=='DSS0011') ~> filter1",
				"Transformation1, select2 lookup(Stage1SalesSALSWINVCTB@INVC_TYPE == select2@INVC_TYPE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(CMM_CODE_NAME, false),",
				"     broadcast: 'auto')~> lookup1",
				"lookup1 select(mapColumn(",
				"          {Dealer_No.} = INVC_DLR_NO,",
				"          {Invoice_No.} = INVC_NO,",
				"          {Corporation_No.} = INVC_CORP_NO,",
				"          {Company_No.} = INVC_CMPN_NO,",
				"          INVC_TYPE = Stage1SalesSALSWINVCTB@INVC_TYPE,",
				"          INVC_CNFM_YN,",
				"          INVC_CNFM_DATE,",
				"          INVC_DATE,",
				"          INVC_INSR_YN,",
				"          INVC_INSR_AMT,",
				"          INVC_INSR_DATE,",
				"          INVC_INSR_TYPE,",
				"          INVC_INSR_NO,",
				"          INVC_RGSTN_NO,",
				"          INVC_RGSTN_DATE,",
				"          INVC_DLVRY_DATE,",
				"          INVC_ADDR1,",
				"          INVC_ADDR2,",
				"          INVC_ADDR3,",
				"          INVC_RGN_CODE,",
				"          INVC_STCD_CODE,",
				"          INVC_CITY_CODE,",
				"          INVC_LCTN_CODE,",
				"          INVC_PIN_CODE,",
				"          INVC_CNCL_YN,",
				"          INVC_CNCL_DATE,",
				"          INVC_CNCL_RMRKS,",
				"          INVC_BKNG_NO,",
				"          INVC_CRTE_DTIME,",
				"          INVC_CRTE_EMP_NO,",
				"          INVC_UPDT_DTIME,",
				"          INVC_UPDT_EMP_NO,",
				"          INVC_ACTRL_USR_YN,",
				"          INVC_DN_DATE,",
				"          INVC_DLVRY_CNFM_YN,",
				"          INVC_CC_REQ,",
				"          INVC_CC_REASON,",
				"          INVC_CC_RDATE,",
				"          INVC_CC_RMRKS,",
				"          INVC_CC_RA_YN,",
				"          INVC_CC_STATUS,",
				"          INVC_CC_REQ_VERSION,",
				"          INVC_HMIL_EMP_CODE,",
				"          {Link_Enquiry_No.} = INVC_ENQRY_NO,",
				"          INVC_REGI_FILE_DOC_NO,",
				"          INVC_DLVRY_FILE_DOC_NO,",
				"          INVC_REGI_RELAT_SHIP,",
				"          INVC_BASIC_PRCE,",
				"          INVC_VRNT_PRCE,",
				"          INVC_ADVNC_EMI,",
				"          INVC_LOAN_AMT,",
				"          INVC_WTYNLTY_CFC_YN,",
				"          INVC_EQCR_SEQ,",
				"          INVC_ALCN_DATE,",
				"          INVC_SCHEME_YN,",
				"          {\"Delivered/Not Delivered Flag\"},",
				"          Flag,",
				"          INVC_TYPE = select2@INVC_TYPE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Renaming",
				"filter1 select(mapColumn(",
				"          INVC_TYPE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"Stage1SalesAfterSalesCMMCMCDTB2TB select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          BKNG_FNCE_TYPE = CMM_CODE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select3",
				"select3 filter(CMM_GRP_CODE=='DSA0001') ~> filter2",
				"Stage1SalesSALSOBKNGTB derive(BKNG_HYPO_NAME = iif(length(trim(BKNG_HYPO_NAME))<1,'Cash & Others',BKNG_HYPO_NAME)) ~> Transformation2",
				"Transformation2, select4 lookup(Stage1SalesSALSOBKNGTB@BKNG_FNCE_TYPE == select4@BKNG_FNCE_TYPE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(CMM_CODE_NAME, false),",
				"     broadcast: 'auto')~> lookup2",
				"filter2 select(mapColumn(",
				"          BKNG_FNCE_TYPE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select4",
				"lookup2 select(mapColumn(",
				"          {Dealer_No.} = BKNG_DLR_NO,",
				"          {Dealer_No.} = BKNG_NO,",
				"          {Corporation_No.} = BKNG_CORP_NO,",
				"          {Company_No.} = BKNG_CMPN_NO,",
				"          BKNG_DATE,",
				"          Model_Code = BKNG_MODEL_CODE,",
				"          TRIM_Code = BKNG_VRNT_CODE,",
				"          {Ext.Colour_Code} = BKNG_COLOR_CODE,",
				"          BKNG_EXPCT_DLVRY_DATE,",
				"          Ex_Showroom_Price = BKNG_VRNT_PRICE,",
				"          BKNG_AMT,",
				"          BKNG_RCPT_TOTAL_AMT,",
				"          BKNG_ALCN_DATE,",
				"          BKNG_ALCN_VIN,",
				"          BKNG_FNCE_TYPE = Stage1SalesSALSOBKNGTB@BKNG_FNCE_TYPE,",
				"          BKNG_DSA_NAME,",
				"          BKNG_CNCL_TYPE,",
				"          BKNG_CNCL_DATE,",
				"          {Link_Enquiry_No.} = BKNG_ENQRY_NO,",
				"          BKNG_EMP_NO,",
				"          BKNG_CRTE_DTIME,",
				"          BKNG_CRTE_EMP_NO,",
				"          BKNG_CMTD_DLVRY_DATE,",
				"          Basic_Price = BKNG_BASIC_PRICE,",
				"          {Int.Colour_Code} = BKNG_INTCOLOR_CODE,",
				"          BKNG_BILL_TO_STATE,",
				"          BKNG_BILL_TO_CITY,",
				"          BKNG_BILL_TO_TEHSIL,",
				"          BKNG_BILL_TO_VILLAGE,",
				"          BKNG_FNCE_TYPE = select4@BKNG_FNCE_TYPE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Renaming2",
				"Renaming, Renaming2 join(Renaming@{Dealer_No.} == Renaming2@{Dealer_No.},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join1",
				"SalesTeamLeader derive(Team_Leader_Name = upper(split(TEAM_LEADER, ';')[2]),",
				"          Team_Leader_Code = split('TEAM_LEADER',';')[1],",
				"          {\"Active/Inactive\"} = upper(split(TEAM_LEADER,';')[3]),",
				"          KEC = upper(KEC_NAME)) ~> Transformation3",
				"Transformation3 select(mapColumn(",
				"          TEAM_LEADER,",
				"          KEC_Short_Code = KEC,",
				"          KEC_NAME,",
				"          KEC_Long_Code = KEC_CODE,",
				"          TEAM_LEADER_LEAVE_DATE,",
				"          KEC_JOIN_DATE,",
				"          KEC_LEAVE_DATE,",
				"          {Link_Enquiry_No.} = EQRY_ENQRY_NO,",
				"          {Dealer_No.} = EQRY_DLR_NO,",
				"          Team_Leader_Name,",
				"          Team_Leader_Code,",
				"          {\"Active/Inactive\"}",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Renaming3",
				"Renaming2, Renaming3 join(Renaming2@{Dealer_No.} == Renaming3@{Dealer_No.},",
				"     joinType:'left',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> join2",
				"Stage1SalesAfterSalesCRMSCEQRY derive(Enquiry_Date1 = toString(toTimestamp(toString(byName('EQRY_DATE')), 'yyyy-MM-dd') , 'dd/MM/yyyy'),",
				"          Key1 = concat(EQRY_ENQRY_NO,'|',EQRY_DLR_NO),",
				"          Enquiry_Source_Type = iif(EQRY_SRC_FLG=='MOB','MySales',iif(length(EQRY_SR_NUM_REAL)>0,'Online','DMS'))) ~> Transformation4",
				"Transformation4, filter3 lookup(Stage1SalesAfterSalesCRMSCEQRY@EQRY_SUB_SRC_CODE == select5@EQRY_SUB_SRC_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(ENSC_NAME, false),",
				"     broadcast: 'auto')~> lookup3",
				"CRMSDENSC select(mapColumn(",
				"          ENSC_GRP_CODE,",
				"          EQRY_SUB_SRC_CODE = ENSC_CODE,",
				"          ENSC_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select5",
				"select5 filter(ENSC_GRP_CODE=='DSO0001') ~> filter3",
				"lookup3 derive(Enquiry_Sub_Source_Name = iif(ENSC_NAME=='Ads',upper('Advertisements'),upper(ENSC_NAME))) ~> Transformation5",
				"Transformation5, filter4 lookup(select5@EQRY_SUB_SRC_CODE == select7@EQRY_SUB_SRC_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(ENSC_GRP_NAME, false),",
				"     broadcast: 'auto')~> lookup4",
				"CRMSDENSC1 select(mapColumn(",
				"          ENSC_GRP_CODE,",
				"          EQRY_SUB_SRC_CODE = ENSC_CODE,",
				"          ENSC_GRP_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select7",
				"select7 filter(ENSC_GRP_CODE=='DSO0001') ~> filter4",
				"lookup4 derive(Enquiry_Source = upper(ENSC_GRP_NAME)) ~> Transformation6",
				"AfterSalesCMMCMCDTB select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_STAT = CMM_CODE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select9",
				"select9 filter(CMM_GRP_CODE=='DSO0002') ~> filter5",
				"Transformation6, filter5 lookup(Stage1SalesAfterSalesCRMSCEQRY@EQRY_STAT == select9@EQRY_STAT,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(CMM_CODE_NAME, false),",
				"     broadcast: 'auto')~> lookup5",
				"lookup5, filter6 lookup(Stage1SalesAfterSalesCRMSCEQRY@EQRY_TYPE == select11@EQRY_TYPE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(CMM_CODE_NAME, false),",
				"     broadcast: 'auto')~> lookup6",
				"StageSalesAfterSalesCMMCMCDTB2 select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_TYPE = CMM_CODE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select11",
				"select11 filter(CMM_GRP_CODE=='DSO0013' && EQRY_TYPE !='N') ~> filter6",
				"Stage1SalesAfterSalesCMMCMCDTB3 select(mapColumn(",
				"          CMM_GRP_CODE,",
				"          EQRY_CTGR_CODE = CMM_CODE,",
				"          CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select13",
				"select13 filter(CMM_GRP_CODE=='DSO0012') ~> filter7",
				"lookup6, filter7 lookup(Stage1SalesAfterSalesCRMSCEQRY@EQRY_CTGR_CODE == select13@EQRY_CTGR_CODE,",
				"     multiple: false,",
				"     pickup: 'first',",
				"     asc(CMM_CODE_NAME, false),",
				"     broadcast: 'auto')~> lookup7",
				"select16 select(mapColumn(",
				"          {Dealer_No.} = EQRY_DLR_NO,",
				"          {Link_Enquiry_No.} = EQRY_ENQRY_NO,",
				"          {Corporation_No.} = EQRY_CORP_NO,",
				"          {Company_No.} = EQRY_CMPN_NO,",
				"          link_date = EQRY_DATE,",
				"          EQRY_SRC_CODE,",
				"          EQRY_STAT,",
				"          EQRY_TYPE,",
				"          EQRY_FNCE_YN,",
				"          EQRY_EXCHG_YN,",
				"          EQRY_EXCHG_SRC_CODE,",
				"          EQRY_CLSE_DATE,",
				"          EQRY_CLSE_TYPE,",
				"          EQRY_CLSE_RMRKS,",
				"          EQRY_EMP_NO,",
				"          EQRY_CRTE_DTIME,",
				"          EQRY_CRTE_EMP_NO,",
				"          EQRY_UPDT_DTIME,",
				"          EQRY_EQFU_SEQ,",
				"          EQRY_UPDT_DATE,",
				"          EQRY_SR_TYPE,",
				"          EQRY_FCALL_EMP_NO,",
				"          EQRY_CTGR_CODE = select12@EQRY_CTGR_CODE,",
				"          EQRY_SUB_SRC_CODE,",
				"          CMM_GRP_CODE = select12@CMM_GRP_CODE,",
				"          Enquiry_Type2 = select12@CMM_CODE_NAME,",
				"          CMM_GRP_CODE = select13@CMM_GRP_CODE,",
				"          EQRY_CTGR_CODE = select13@EQRY_CTGR_CODE,",
				"          Enquiry_Category_Type = select13@CMM_CODE_NAME",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select14",
				"source1 select(mapColumn(",
				"          {Dealer_No.} = EQCR_DLR_NO,",
				"          {Link_Enquiry_No.} = EQCR_ENQRY_NO,",
				"          EQCR_SEQ,",
				"          corp = EQCR_CORP_NO,",
				"          comp = EQCR_CMPN_NO,",
				"          { EQCR_QTY} = EQCR_QTY,",
				"          EQCR_CRTE_DTIME,",
				"          EQCR_CRTE_EMP_NO,",
				"          EQCR_QUOTED_PRICE,",
				"          EQCR_EXPECTED_PRICE",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select15",
				"lookup7 select(mapColumn(",
				"          each(match(/* All input columns */ true()),",
				"               /* Input name */ $$ = $$)",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select16"
			]
		}
	}
}